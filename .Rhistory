last.fm$data <- date(last.fm$data) # exclui as horas
# converter fatores para caracteres
# e capitalizacao dos nomes
capwords <- function(s, strict = TRUE) {
cap <- function(s) paste(toupper(substring(s, 1, 1)),
{s <- substring(s, 2); if(strict) tolower(s) else s},
sep = "", collapse = " " )
sapply(strsplit(s, split = " "), cap, USE.NAMES = !is.null(names(s)))
}
last.fm$artista <- sapply(as.character(last.fm$artista), capwords)
last.fm$album   <- sapply(as.character(last.fm$album), capwords)
last.fm$musica  <- sapply(as.character(last.fm$musica), capwords)
# retirar caracteres especiais dos nomes
last.fm$artista <- stri_trans_general(last.fm$artista, "latin-ascii")
last.fm$album   <- stri_trans_general(last.fm$album, "latin-ascii")
last.fm$musica  <- stri_trans_general(last.fm$musica, "latin-ascii")
last.fm$artista <- gsub("&", "and", last.fm$artista)
last.fm$album   <- gsub("&", "and", last.fm$album)
last.fm$musica  <- gsub("&", "and", last.fm$musica)
last.fm$artista <- gsub("Jupiter Maca", "Jupiter Apple", last.fm$artista)
# artistas mais ouvidos
last.fm %>%
group_by(artista) %>%
count() %>%
arrange(desc(n)) %>%
print(n=50)
# musicas mais ouvidas
last.fm %>%
group_by(musica, artista) %>%
count() %>%
arrange(desc(n))
# albuns mais ouvidos
last.fm %>%
group_by(album, artista) %>%
count() %>%
arrange(desc(n))
setwd("~/Documents/Research/marcusnunes.me/content/posts")
setwd("~/Documents/Research/marcusnunes.me/content/posts")
library(tidyverse)
theme_set(theme_bw())
library(lubridate)
library(stringi)
library(plotly)
# leitura dos dados
#last.fm <- as_data_frame(read.csv(file="scrobbles-grandeabobora-1513705894.csv"))
last.fm <- as_tibble(read.csv(file="grandeabobora.csv", header=FALSE))
# colocar nomes nas colunas
names(last.fm) <- c("artista", "album", "musica", "data")
# converter as datas para um formato reconhecivel pelo R
last.fm$data <- dmy_hm(last.fm$data)
last.fm$data <- date(last.fm$data) # exclui as horas
# converter fatores para caracteres
# e capitalizacao dos nomes
capwords <- function(s, strict = TRUE) {
cap <- function(s) paste(toupper(substring(s, 1, 1)),
{s <- substring(s, 2); if(strict) tolower(s) else s},
sep = "", collapse = " " )
sapply(strsplit(s, split = " "), cap, USE.NAMES = !is.null(names(s)))
}
last.fm$artista <- sapply(as.character(last.fm$artista), capwords)
last.fm$album   <- sapply(as.character(last.fm$album), capwords)
last.fm$musica  <- sapply(as.character(last.fm$musica), capwords)
# retirar caracteres especiais dos nomes
last.fm$artista <- stri_trans_general(last.fm$artista, "latin-ascii")
last.fm$album   <- stri_trans_general(last.fm$album, "latin-ascii")
last.fm$musica  <- stri_trans_general(last.fm$musica, "latin-ascii")
last.fm$artista <- gsub("&", "and", last.fm$artista)
last.fm$album   <- gsub("&", "and", last.fm$album)
last.fm$musica  <- gsub("&", "and", last.fm$musica)
last.fm$artista <- gsub("Jupiter Maca", "Jupiter Apple", last.fm$artista)
# artistas mais ouvidos
last.fm %>%
group_by(artista) %>%
count() %>%
arrange(desc(n)) %>%
print(n=50)
# musicas mais ouvidas
last.fm %>%
group_by(musica, artista) %>%
count() %>%
arrange(desc(n))
# albuns mais ouvidos
last.fm %>%
group_by(album, artista) %>%
count() %>%
arrange(desc(n))
last.fm %>%
group_by(artista) %>%
count() %>%
arrange(desc(n)) %>%
print(n=50) %>%
kable()
library(tidyverse)
theme_set(theme_bw())
library(lubridate)
library(stringi)
library(plotly)
library(knitr)
library(kableExtra)
last.fm %>%
group_by(artista) %>%
count() %>%
arrange(desc(n)) %>%
print(n=50) %>%
kable()
last.fm %>%
group_by(artista) %>%
count() %>%
arrange(desc(n)) %>%
head(n=20) %>%
kable()
ti<-proc.time(); blogdown::build_site(); proc.time()-ti
setwd("~/Documents/Research/marcusnunes.me")
ti<-proc.time(); blogdown::build_site(); proc.time()-ti
last.fm %>%
group_by(musica, artista) %>%
count() %>%
arrange(desc(n)) %>%
head(n=20)
last.fm %>%
group_by(album, artista) %>%
count() %>%
arrange(desc(n)) %>%
head(n=20)
top_musicas <- last.fm %>%
group_by(artista, musica) %>%
count() %>%
arrange(desc(n)) %>%
head(15) %>% # quantidade de musicas
select(musica, artista)
top_musicas <- apply(top_musicas, 1, as.character)
# audicoes cumulativas das top 10 musicas
grafico <- last.fm %>%
filter(musica %in% top_musicas) %>%
count(data, musica) %>%
complete(data, musica, fill = list(n = 0)) %>%
group_by(musica) %>%
mutate(n = cumsum(n)) %>%
ggplot(., aes(x=data, y=n, colour=musica, text=musica)) +
geom_line() +
scale_colour_viridis_d() +
labs(x="Ano", y="Número de Execuções", colour="Música")
ggplotly(grafico, tooltip="text")
# objeto com os artistas mais ouvidos
top_artistas <- last.fm %>%
group_by(artista) %>%
count() %>%
arrange(desc(n)) %>%
head(15) %>% # quantidade de artistas
select(artista)
top_artistas <- apply(top_artistas, 1, as.character)
# audicoes cumulativas dos top 15 artistas
grafico <- last.fm %>%
filter(artista %in% top_artistas) %>%
count(data, artista) %>%
complete(data, artista, fill = list(n = 0)) %>%
group_by(artista) %>%
mutate(n = cumsum(n)) %>%
ggplot(., aes(x=data, y=n, colour=artista, text=artista)) +
geom_line() +
scale_colour_viridis_d() +
labs(x="Ano", y="Número de Execuções", colour="Artista")
ggplotly(grafico, tooltip="text")
####################################
# objeto com as musicas mais ouvidas
top_musicas <- last.fm %>%
group_by(artista, musica) %>%
count() %>%
arrange(desc(n)) %>%
head(15) %>% # quantidade de musicas
select(musica, artista)
top_musicas <- apply(top_musicas, 1, as.character)
# audicoes cumulativas das top 10 musicas
grafico <- last.fm %>%
filter(musica %in% top_musicas) %>%
count(data, musica) %>%
complete(data, musica, fill = list(n = 0)) %>%
group_by(musica) %>%
mutate(n = cumsum(n)) %>%
ggplot(., aes(x=data, y=n, colour=musica, text=musica)) +
geom_line() +
scale_colour_viridis_d() +
labs(x="Ano", y="Número de Execuções", colour="Música")
ggplotly(grafico, tooltip="text")
top_albuns <- last.fm %>%
group_by(artista, album) %>%
count() %>%
arrange(desc(n)) %>%
head(15) %>% # quantidade de musicas
select(album, artista)
top_albuns <- apply(top_albuns, 1, as.character)
# audicoes cumulativas das top 10 musicas
grafico <- last.fm %>%
filter(musica %in% top_albuns) %>%
count(data, album) %>%
complete(data, musica, fill = list(n = 0)) %>%
group_by(musica) %>%
mutate(n = cumsum(n)) %>%
ggplot(., aes(x=data, y=n, colour=musica, text=musica)) +
geom_line() +
scale_colour_viridis_d() +
labs(x="Ano", y="Número de Execuções", colour="Música")
ggplotly(grafico, tooltip="text")
grafico <- last.fm %>%
filter(musica %in% top_albuns) %>%
count(data, album) %>%
complete(data, album, fill = list(n = 0)) %>%
group_by(musica) %>%
mutate(n = cumsum(n)) %>%
ggplot(., aes(x=data, y=n, colour=musica, text=musica)) +
geom_line() +
scale_colour_viridis_d() +
labs(x="Ano", y="Número de Execuções", colour="Música")
grafico <- last.fm %>%
filter(musica %in% top_albuns) %>%
count(data, album) %>%
complete(data, album, fill = list(n = 0)) %>%
group_by(musica) %>%
mutate(n = cumsum(n)) %>%
ggplot(., aes(x=data, y=n, colour=musica, text=album)) +
geom_line() +
scale_colour_viridis_d() +
labs(x="Ano", y="Número de Execuções", colour="Álbum")
grafico <- last.fm %>%
filter(musica %in% top_albuns) %>%
count(data, album) %>%
complete(data, album, fill = list(n = 0)) %>%
group_by(musica) %>%
mutate(n = cumsum(n)) %>%
ggplot(., aes(x=data, y=n, colour=album, text=album)) +
geom_line() +
scale_colour_viridis_d() +
labs(x="Ano", y="Número de Execuções", colour="Álbum")
grafico <- last.fm %>%
filter(album %in% top_albuns) %>%
count(data, album) %>%
complete(data, album, fill = list(n = 0)) %>%
group_by(album) %>%
mutate(n = cumsum(n)) %>%
ggplot(., aes(x=data, y=n, colour=album, text=album)) +
geom_line() +
scale_colour_viridis_d() +
labs(x="Ano", y="Número de Execuções", colour="Álbum")
ggplotly(grafico, tooltip="text")
top_albuns <- last.fm %>%
group_by(artista, album) %>%
count() %>%
arrange(desc(n)) %>%
head(10) %>% # quantidade de musicas
select(album, artista)
top_albuns <- apply(top_albuns, 1, as.character)
# audicoes cumulativas das top 10 musicas
grafico <- last.fm %>%
filter(album %in% top_albuns) %>%
count(data, album) %>%
complete(data, album, fill = list(n = 0)) %>%
group_by(album) %>%
mutate(n = cumsum(n)) %>%
ggplot(., aes(x=data, y=n, colour=album, text=album)) +
geom_line() +
scale_colour_viridis_d() +
labs(x="Ano", y="Número de Execuções", colour="Álbum")
ggplotly(grafico, tooltip="text")
?ggplotly
ti<-proc.time(); blogdown::build_site(); proc.time()-ti
system.time(blogdown::build_site();)
system.time(blogdown::build_site())
datas <- seq.Date(from=as.Date("01/01/2019"),
to=as.Date("31/12/2019"))
datas <- seq.Date(from=as.Date("01/01/2019"),
to=as.Date("31/12/2019"),
length.out = 365)
datas
datas <- seq.Date(from=as.Date("01/01/2019"),
to=as.Date("12/31/2019"),
length.out = 365)
datas <- seq.Date(from=as.Date("2019/01/01"),
to=as.Date("2019/12/31"),
length.out = 365)
datas
(1.01)^(1:365)
library(tidyverse)
datas <- seq.Date(from=as.Date("2019/01/01"),
to=as.Date("2019/12/31"),
length.out = 365)
y <- (1.01)^(1:365)
dados <- data.frame(datas, y)
theme_set(theme_bw())
ggplot(dados, aes(x=datas, y=y)) +
geom_line()
ggplot(dados, aes(x=datas, y=y)) +
geom_line() +
labs(x="Data", y="Valor Pessoal")
tail(dados)
tail(dados, n=7)
library(tidyverse)
theme_set(theme_bw())
pi <- read.table(file="pi.dat", header = FALSE, colClasses = "character")
pi <- as.numeric(unlist(apply(pi, 2, strsplit, split="")))
table(pi)
pi.grid         <- expand.grid(x=1:1000, y=1:1000)
pi.grid$digitos <- pi
ggplot(pi.grid, aes(x, y)) +
geom_raster(aes(fill = digitos)) +
scale_fill_continuous(breaks = seq(0, 9, 3)) +
labs(x="", y="", fill = "Dígitos")
setwd("~/Documents/Research/github/pi-day")
library(tidyverse)
theme_set(theme_bw())
pi <- read.table(file="pi.dat", header = FALSE, colClasses = "character")
pi <- as.numeric(unlist(apply(pi, 2, strsplit, split="")))
table(pi)
pi.grid         <- expand.grid(x=1:1000, y=1:1000)
pi.grid$digitos <- pi
ggplot(pi.grid, aes(x, y)) +
geom_raster(aes(fill = digitos)) +
scale_fill_continuous(breaks = seq(0, 9, 3)) +
labs(x="", y="", fill = "Dígitos")
history()
system.time(blogdown::build_site())
system.time(blogdown::build_site())
meme_get("BatmanRobin") %>%
meme_text_top("Uso Excel e me considero \num cientista de dados") %>%
meme_text_bottom("")
library(dplyr)
meme_get("BatmanRobin") %>%
meme_text_top("Uso Excel e me considero \num cientista de dados") %>%
meme_text_bottom("")
library(memer)
meme_get("BatmanRobin") %>%
meme_text_top("Uso Excel e me considero \num cientista de dados") %>%
meme_text_bottom("")
library(dplyr)
meme_get("BatmanRobin") %>%
meme_text_top("Uso Excel e me considero \num cientista de dados", size = 20) %>%
meme_text_bottom("")
library(dplyr)
meme_get("AncientAliens") %>%
meme_text_top("Uso Excel e me considero \num cientista de dados", size = 0) %>%
meme_text_bottom("")
?meme_text_batman
meme_get("BatmanRobin") %>%
meme_text_batman("Uso Excel e me considero \num cientista de dados", size = 0)
library(dplyr)
meme_get("BatmanRobin") %>%
meme_text_batman(robin  = "Estudei 20 horas no Udemy e sou cientista de dados",
batman = "")
meme_get("BatmanRobin") %>%
meme_text_batman(robin  = "Estudei 20 horas no Udemy e virei cientista de dados",
batman = "Lave sua boca, Robin. Você é apeas um menino!")
meme_get("BatmanRobin") %>%
meme_text_batman(robin  = "Estudei 20 horas no Udemy e virei cientista de dados",
batman = "Eu não acredito no que eu ouvi. Você é um menino ainda!")
meme_list()
meme_get("DistractedBf") %>%
meme_text_distbf(newgirl = "Cientistas de Dados", guy = "Mercado de Trabalho", oldgirl = "Estatísticos")
meme_get("DistractedBf") %>%
meme_text_distbf(newgirl = "Cientistas de Dados", guy = "Mercado de Trabalho", oldgirl = "Estatísticos", size = 30)
meme_get("DistractedBf") %>%
meme_text_distbf(newgirl = "Cientistas de \nDados", guy = "Mercado de \nTrabalho", oldgirl = "Estatísticos", size = 30)
system.time(blogdown::build_site())
system.time(blogdown::build_site())
meme_get("FryNotSure") %>%
meme_text_top("Não sei se isso é algo útil") %>%
meme_text_bottom("Ou só mais uma ferramenta criada pra eu procrastinar")
meme_get("FryNotSure") %>%
meme_text_top("Não sei se isso é algo útil") %>%
meme_text_bottom("Ou só mais uma ferramenta \ncriada pra eu procrastinar")
meme_get("BatmanRobin") %>%
meme_text_batman(robin  = "Estudei 20 horas no Udemy e virei cientista de dados!",
batman = "Eu não acredito no que eu ouvi. Você é um menino ainda!")
system.time(blogdown::build_site())
system.time(blogdown::build_site())
system.time(blogdown::build_site())
system.time(blogdown::build_site())
install.packages("blogdown")
system.time(blogdown::build_site())
devtools::install_github("sctyner/memer")
system.time(blogdown::build_site())
warnings()
library(gtrendsR)
library(tidyverse)
theme_set(theme_bw())
library(lubridate)
dados <- gtrends(keyword = "white stripes",
time="2004-01-01 2018-12-01")$interest_over_time
?gtrends
gtrends(keyword = "white stripes",
time="2004-01-01 2018-12-01")
gtrends(keyword = "white stripes",
time="2004-01-01")
devtools::install_github("PMassicotte/gtrendsR")
library(gtrendsR)
library(tidyverse)
theme_set(theme_bw())
library(lubridate)
dados <- gtrends(keyword = "white stripes",
time="2004-01-01 2018-12-01")$interest_over_time
?gtrends
?gtrends
install.packages("gtrnds")
install.packages("gtrends")
install.packages("gtrendsR")
install.packages("gtrendsR")
devtools::install_github("PMassicotte/gtrendsR")
library(gtrendsR)
library(tidyverse)
theme_set(theme_bw())
library(lubridate)
dados <- gtrends(keyword = "white stripes",
time="2004-01-01 2018-12-01")$interest_over_time
gtrends(keyword = "white stripes")
?gtrends
gtrends(keyword = "white stripes",
time="2004-01-01 2018-12-01")
library(gtrendsR)
library(tidyverse)
theme_set(theme_bw())
library(lubridate)
gtrends(keyword = "white stripes",
time="2004-01-01 2018-12-01")
gtrends(keyword = "white stripes",
time="now 4-H")
gtrends(keyword = "white stripes",
time="2010-01-01 2010-04-03")
dados <- gtrends(keyword = "white stripes",
time = "2004-01-01 2018-12-01")$interest_over_time
gtrends(keyword = "white stripes",
time = "2004-01-01 2018-12-01")
gtrends(keyword = "white stripes",
time = "2004-01-01 2019-01-01")
gtrends(keyword = "white stripes",
time = "2004-01-01 2005-01-01")
gtrends(keyword = "white stripes",
time = "2010-01-01 2011-01-01")
gtrends(keyword = "white stripes",
time = "2004-01-01 2011-01-01")
gtrends(keyword = "white stripes",
time = "2005-01-01 2011-01-01")
gtrends(keyword = "white stripes",
time = "2005-01-01 2018-01-01")
dados <- gtrends(keyword = "white stripes",
time = "2005-01-01 2018-12-01")$interest_over_time
system.time(blogdown::build_site())
dados <- gtrends(keyword = "white stripes",
time = "2005-01-01 2018-12-01")$interest_over_time
dados$date <- ymd(dados$date)
ggplot(dados, aes(x=date, y=hits)) +
geom_line() +
scale_x_date(date_labels="%Y", date_breaks = "1 year") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(x="Ano", y="Popularidade", title="Buscas por White Stripes no Google") +
scale_colour_viridis_d()
dados <- gtrends(keyword = "white stripes",
time = "2005-01-01 2018-12-01")$interest_over_time
dados$date <- ymd(dados$date)
ggplot(dados, aes(x=date, y=hits)) +
geom_line() +
scale_x_date(date_labels="%Y", date_breaks = "1 year") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(x="Ano", y="Popularidade", title="Buscas por White Stripes no Google") +
scale_colour_viridis_d()
ggplot(dados, aes(x=date, y=hits)) +
geom_line() +
scale_x_date(date_labels="%Y", date_breaks = "1 year")
ggplot(dados, aes(x=date, y=hits)) +
geom_line() +
#scale_x_date(date_labels="%Y", date_breaks = "1 year") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(x="Ano", y="Popularidade", title="Buscas por White Stripes no Google") +
scale_colour_viridis_d()
ggplot(dados, aes(x=date, y=hits)) +
geom_line()
dados
dados <- gtrends(keyword = "white stripes",
time = "2005-01-01 2018-12-01")$interest_over_time
dados <- gtrends(keyword = "white stripes",
time = "2005-01-01 2018-12-01")$interest_over_time
dados <- gtrends(keyword = "white stripes",
time = "2005-01-01 2018-12-01")$interest_over_time
ymd(dados$date)
ymd
ymd(dados$time)
dados$time
dados$ti
me
gtrends(keyword = "white stripes",
time = "2005-01-01 2018-12-01")$interest_over_time
system.time(blogdown::build_site())
system.time(blogdown::build_site())
install.packages("formatR")
system.time(blogdown::build_site())
system.time(blogdown::build_site())
system.time(blogdown::build_site())
system.time(blogdown::build_site())
system.time(blogdown::build_site())
system.time(blogdown::build_site())
system.time(blogdown::build_site())
system.time(blogdown::build_site())
system.time(blogdown::build_site())
library(memer)
devtools::install_github("sctyner/memer")
devtools::install_github("sctyner/memer", force = TRUE)
library(memer)
system.time(blogdown::build_site())
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::hugo_version()
blogdown::hugo_version()
blogdown::serve_site()
install.packages(c("AlgDesign", "caTools", "emmeans", "igraph", "insight", "Matrix", "rgdal"))
