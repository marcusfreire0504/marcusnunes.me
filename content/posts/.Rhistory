library(BatchGetSymbols)
library(quantmod)
library(tidyverse)
# Inputs necessários ------------------------------------------------------
#data inicial
first.date <- as.Date("2007-01-01")
#data final
last.date <- Sys.Date()
#frequencia das observações
freq.data <-'daily'
# Ativos a serem baixados
tickers <-c("^BVSP","PETR4.SA")
# Importando ativos -------------------------------------------------------
ativos <- BatchGetSymbols(tickers = tickers,
first.date = first.date,
last.date = last.date,
freq.data = freq.data,
cache.folder = file.path(tempdir(),
'BGS_Cache') )
ativos[ativos[,8] == tickers[i],]
tickers[i]
i <- 1
ativos[ativos[,8] == tickers[i],]
ativos
split(ativos$df.tickers, ativos$df.tickers$ticker)
# Pacotes necessários ----------------------------------------------
library(BatchGetSymbols)
library(quantmod)
# Inputs necessários ------------------------------------------------------
#data inicial
first.date <- as.Date("2018-01-01")
#data final
last.date <- Sys.Date()
#frequencia das observações
freq.data <- 'daily'
# Ativos a serem baixados
tickers <- c("^BVSP")
# Importando ativos -------------------------------------------------------
ibov <- BatchGetSymbols(tickers = tickers,
first.date = first.date,
last.date = last.date,
freq.data = freq.data,
cache.folder = file.path(tempdir(),
'BGS_Cache') )
ibov<-as.data.frame(ibov)
ibov
ibov <- xts(ibov, order.by = ibov$df.tickers.ref.date)
ibov
# Pacotes necessários ----------------------------------------------
library(BatchGetSymbols)
library(quantmod)
# Inputs necessários ------------------------------------------------------
#data inicial
first.date <- as.Date("2018-01-01")
#data final
last.date <- Sys.Date()
#frequencia das observações
freq.data <- 'daily'
# Ativos a serem baixados
tickers <- c("^BVSP")
# Importando ativos -------------------------------------------------------
ibov <- BatchGetSymbols(tickers = tickers,
first.date = first.date,
last.date = last.date,
freq.data = freq.data,
cache.folder = file.path(tempdir(),
'BGS_Cache') )
ibov<-as.data.frame(ibov)
chartSeries(ibov)
?xts
ibov <- xts(ibov$df.tickers.price.adjusted, order.by = ibov$df.tickers.ref.date)
chartSeries(ibov)
?chartSeries
chartSeries(ibov, type="candlesticks")
chartSeries(ibov, type="candlesticks")
chartSeries(ibov, type="mathsticks")
chartSeries(ibov, type="matchsticks")
ibov
getSymbols("YHOO")
chartSeries(YHOO)
chartSeries(YHOO, subset='last 4 months')
chartSeries(YHOO, subset='2007::2008-01')
chartSeries(YHOO,theme=chartTheme('white'))
chartSeries(YHOO,TA=NULL)   #no volume
chartSeries(YHOO,TA=c(addVo(),addBBands()))  #add volume and Bollinger Bands from TTR
# Pacotes necessários ----------------------------------------------
library(BatchGetSymbols)
library(quantmod)
# Inputs necessários ------------------------------------------------------
#data inicial
first.date <- as.Date("2018-01-01")
#data final
last.date <- Sys.Date()
#frequencia das observações
freq.data <- 'daily'
# Ativos a serem baixados
tickers <- c("^BVSP")
# Importando ativos -------------------------------------------------------
ibov <- BatchGetSymbols(tickers = tickers,
first.date = first.date,
last.date = last.date,
freq.data = freq.data,
cache.folder = file.path(tempdir(),
'BGS_Cache') )
chartSeries(ibov, type="matchsticks")
chartSeries(ibov)
barChart(ibov)
getSymbols("GS")
chartSeries(GS)
chartSeries(GS, type="candlesticks")
getSymbols("GS", first.date = first.date, last.date = last.date)
chartSeries(GS, type="candlesticks")
chartSeries(GS, type="candlesticks")
bookdown::render_book("index.Rmd", "bookdown::pdf_book"); system("open _book/manualLEA.pdf")
bookdown::render_book("00.index.Rmd", "bookdown::pdf_book"); system("open _book/manualLEA.pdf")
